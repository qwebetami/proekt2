import time as t
while True:
    choose = int(input('enter the number corresponding to one of the tasks: \n 1- Paskals trinagle \n 2- \n 3- product of matrices \n'))
    if choose == 1:
        while True:
            n1 = input('please enter natural number or type `stop` to stop entering \n')  # enter 
            if n1 == 'stop':  # making exit from endless cycle
                break # leave from here
            else:  # user enter number
                try:
                    int(n1)            
                except ValueError:
                    print('error, not number or stop')
                    t.sleep(2)
                    break
                n = int(n1)  # making number from str
                while True:
                    if n < 0:  # give to user second life
                        print('Error: number must be non-negative! enter again')  
                        t.sleep(5)  # why it sleep, but i'm no
                    else:  
                        triangle = []  # empty list
                        for i in range(n+1):  # We go through each row of the triangle from 0 to n
                            row = [1] * (i+1)  # making list from only 1
                            for j in range(1, i):  # new cycle
                                row[j] = triangle[i-1][j-1] + triangle[i-1][j]  # change every number to sum of twos 
                            triangle.append(row)  # add to list line

                        for row in triangle:  # went by every number in list
                            print(' '.join(map(str, row)))  # use map to print all in the line
                        t.sleep(5)  # spokoinoi nochi
                        break    
    elif choose == 3:
        while True: 
            rows1, rows2, column1, column2 = map(int, input('enter throw space number of rows and columns of two matrices respectively \n or type s t o p (throw space) to leave \n').split()) # inputing razmery
            try:
                int(rows1)
            except ValueError:
                break  # if user want to leave
            if column1 != rows2:  # can't find product
               print('error, can not be peremnozheno')  
               break
            matrix1 = [] # new list
            print('input 1st matrix(dif columns throw space and rows throw enter') 
            for _ in range(rows1):
                matrix1.append(list(map(int, input().strip().split())))
            matrix2 = []
            print('input 2nd matrix')
            for _ in range(rows2):  # new matrix zapolnenie
                matrix2.append(list(map(int, input().strip().split())))  
            matrixultra = [[0 for _ in range(column2)] for _ in range(rows1)]  # free matrix
            for k in range(rows1):
                for g in range(column2):
                    for f in range(rows2):
                        matrixultra[k][g] += matrix1[k][f] * matrix2[f][g]  # making product of two matrix
            for row in matrixultra:  # output new matrix
                print(' '.join(map(str, row)))
            t.sleep(3)
